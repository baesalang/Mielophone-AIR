<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				width="100%" height="32"
				rollOverColor="#383E42"
				buttonMode="true" useHandCursor="true"
				creationComplete="itemrenderer1_creationCompleteHandler(event)"
				dataChange="itemrenderer1_dataChangeHandler(event)"
				click="itemrenderer1_clickHandler(event)"
				rightClick="itemrenderer1_rightClickHandler(event)"
				
				mouseMove="itemrenderer1_dragStartHandler(event)"
				dragEnter="itemrenderer1_dragEnterHandler(event)"
				dragDrop="itemrenderer1_dragDropHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.codezen.mse.models.Song;
			
			import mx.collections.ArrayCollection;
			import mx.core.DragSource;
			import mx.core.FlexGlobals;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			import mx.utils.ObjectProxy;
			
			[Bindable]
			private var bg:uint = 0xFFFFFF;
			
			private function itemrenderer1_dataChangeHandler(event:FlexEvent):void{
				if(data == null) return;
				if( data.number == -100){
					this.alpha = 0.5;
				}else if( this.itemIndex == FlexGlobals.topLevelApplication.musicPlayer.playPos ){
					bgRect.visible = true;
					bg = 0x5C6167;
				}else{
					bgRect.visible = false;
				}
				
				/*else if( this.itemIndex % 2 == 0 ){
					bg = 0xc3cdd8;
				}else{
					bg = 0xe1e6ec;
				}*/
			}
			
			private function itemrenderer1_clickHandler(event:MouseEvent):void
			{
				//FlexGlobals.topLevelApplication._playPos = this.itemIndex;
				//trace(this.itemIndex);
				FlexGlobals.topLevelApplication.musicPlayer.playSongByNum(this.itemIndex);
			}
			
			private function itemrenderer1_creationCompleteHandler(event:FlexEvent):void
			{
				FlexGlobals.topLevelApplication.musicPlayer.addEventListener(Event.CHANGE, onIndexChange);
			}
			
			private function onIndexChange(e:Event):void{
				itemrenderer1_dataChangeHandler(null);
			}
			
			private function itemrenderer1_rightClickHandler(event:MouseEvent):void
			{
				var menu:NativeMenu = new NativeMenu();
				
				var del:NativeMenuItem = new NativeMenuItem("Delete");
				del.addEventListener(Event.SELECT, deleteSong);  
				menu.addItem(del);
				
				var s:NativeMenuItem  = new NativeMenuItem("s", true);  
				menu.addItem(s);
				
				var video:NativeMenuItem = new NativeMenuItem("Find video");
				video.addEventListener(Event.SELECT, findVideo);  
				menu.addItem(video);
				
				var p:Point = localToGlobal(new Point(mouseX, mouseY));
				menu.display(stage, p.x, p.y);
			}
			
			private function deleteSong(e:Event):void{
				FlexGlobals.topLevelApplication.musicPlayer.deleteSongFromPlaylist(this.itemIndex);
			}
			
			private function findVideo(e:Event):void{
				FlexGlobals.topLevelApplication.videoView.findVideo(data.artist.name + " " + data.name);
			}
			
			private function itemrenderer1_dragStartHandler(event:MouseEvent):void
			{
				var dragInitiator:ItemRenderer = ItemRenderer(event.currentTarget);
				var ds:DragSource = new DragSource();
				ds.addData(dragInitiator, "item");               
				
				DragManager.doDrag(dragInitiator, ds, event);
			}
			
			private function itemrenderer1_dragDropHandler(event:DragEvent):void
			{
				var newIndex:int = ItemRenderer(event.dragInitiator).itemIndex;
				var oldIndex:int = this.itemIndex;
				var otherSong:Song = (FlexGlobals.topLevelApplication.musicPlayer.songList.dataProvider as ArrayCollection).getItemAt(newIndex) as Song;
				
				(FlexGlobals.topLevelApplication.musicPlayer.songList.dataProvider as ArrayCollection).setItemAt(data as Song, newIndex);
				(FlexGlobals.topLevelApplication.musicPlayer.songList.dataProvider as ArrayCollection).setItemAt(otherSong, oldIndex);
				//(FlexGlobals.topLevelApplication.musicPlayer.songList.dataProvider as ArrayCollection).refresh();
			}
			
			private function itemrenderer1_dragEnterHandler(event:DragEvent):void
			{
				if (event.dragSource.hasFormat("item"))
				{
					DragManager.acceptDragDrop(ItemRenderer(event.currentTarget));
				}
			}
			
		]]>
	</fx:Script>
	
	<s:Rect width="100%" height="100%" id="bgRect" visible="false">
		<s:fill>
			<s:SolidColor color="{bg}" />
		</s:fill>
	</s:Rect>
	
	<s:HGroup width="100%" height="100%" gap="2" verticalAlign="middle"
			  paddingLeft="5" paddingRight="5">
		<s:Label width="50%" text="{new ObjectProxy(data).name}" maxDisplayedLines="1" 
				 fontSize="12" color="#FFFFFF" fontWeight="bold" />
		<s:Label width="50%" text="{new ObjectProxy(data).artist.name}" maxDisplayedLines="1" 
				 fontSize="12" color="#C0C1C2" fontWeight="bold" />
		<s:Label text="{new ObjectProxy(data).durationText}" fontSize="11" color="#C0C1C2" />
	</s:HGroup>
	
</s:ItemRenderer>
